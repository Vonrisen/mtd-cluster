1) Scaricare il file mysql-deployment.yaml
2) Cambiare la riga 28 del file "kubernetes.io/hostname: worker1  # Forziamo MySQL su worker1" con il nome del nodo su cui vogliamo eseguirlo
3) Eseguire l comando "kubectl create secret generic backend-secrets   --from-literal=db_password='rootpassword'   --from-literal=secret_key='rootpassword'" nel master.
4) Eseguire il comando "kubectl apply -f mysql-deployment.yaml" nella cartella in cui è presente il file
5) Prima di andare avanti essere sicuri che il pod sia in "Running" (COMANDO: "kubectl get pods") e che il servizio sia visibile (vedere la foto per vedere anche la porta esposta     (NodePort)FOTO 1) 

6) Aprire una shell e digitare il comando "kubectl exec -it <POD_NAME> -- MySQL -u root -p". L'utente root è stato creato di default con PASSSWORD "rootpassword".

7) Una volta dentro possiamo vedere con il comando "show databases;" i database esistenti.

8) Il database bankdb dovrebbe essere già stato creato. Se non dovesse essere così è possibile crearlo con il comando: "create database bankdb;" e poi "use bankdb;" per accedere.

9) Andremo a creare due table distinte: una per gli utenti e una per i movimenti


9-a) CREAZIONE TABELLA UTENTI

Per creare la table usiamo il comando:

CREATE TABLE users ( 
	id INT AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	surname VARCHAR(50) NOT NULL,
	email VARCHAR(100) NOT NULL UNIQUE,
	password VARCHAR(255) NOT NULL,
	balance DECIMAL(10,2) NOT NULL DEFAULT 0.00
	);

9-b) CREAZIONE TABELLA MOVIMENTI:

Per creare la table usiamo il comando:

CREATE TABLE transactions(
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_sender INT NOT NULL,
    email_sender VARCHAR(255) NOT NULL,
    id_receiver INT NOT NULL,
    email_receiver VARCHAR(255) NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    description TEXT NULL
);



10) In questo modo le tabelle state create. Se si vuole popolare la tabella users si possono usare, a scopo esemplificativo le seguenti query:

INSERT INTO users (name, surname, email, password, balance) 
VALUES 
('Giovanni', 'Rossi', 'giovanni.rossi@email.com', 'pbkdf2:sha256:260000$D4kuLfbAZTEqwgNs$2a54fd573638b8579e8fe5065de2b98463ffb3063820938f6c2b965c969bbf2d', 500.00), 
('Maria', 'Bianchi', 'maria.bianchi@email.com', 'pbkdf2:sha256:260000$cPNofnRIMNt88UYH$3bdcc1f225c222cb9cd1b9eac5f38e15434653848d01e81114c1a67eda0b2fc7', 1000.00),
('Luca', 'Verdi', 'luca.verdi@email.com', 'pbkdf2:sha256:260000$eWmItAkdLFqZhggI$d7e39d8c9e101f6bbb98e641c1ad2c476ff5aa172d5c955b27683944444340f2', 1500.00),
('Anna', 'Neri', 'anna.neri@email.com', 'pbkdf2:sha256:260000$vyyRyHIxtVKyr5Sk$11776308bf0b4a9d4bc6a6d6f02d2177db672ebcf0d8e1ea7be8679cf85af0fe', 2000.00),
('Marco', 'Gialli', 'marco.gialli@email.com', 'pbkdf2:sha256:260000$23uECGvUNaUrWLCb$2fda8024bec75830fe97d7279867652b2933dc00d870fbfa9968c643b8c1228e', 2500.00);

ATTENZIONE: Per garantire la sicurezza dei dati a riposo è stato scelto di conservare le password dopo avere applicato la funzione di hash su di esse. 
RICORDA: Se vuoi accedere alla dashboard dell'applicazione come uno degli utenti esempio la password è il nome dell'utente con l'iniziale maiuscola.



11) Se si vuole popolare la tabella transactions si possono usare, a scopo esemplificativo le seguenti query esposte ai passi successivi:


11-a)

INSERT INTO transactions (id_sender, email_sender, id_receiver, email_receiver, amount, description)
VALUES (
    3, 
    'luca.verdi@email.com', 
    1, 
    'giovanni.rossi@email.com', 
    10.00, 
    'acconto vacanza'
);



11-b)

INSERT INTO transactions (id_sender, email_sender, id_receiver, email_receiver, category, amount, description)
VALUES (
    1, 
    'giovanni.rossi@email.com', 
    3, 
    'luca.verdi@email.com', 
    'transfer', 
    10.00, 
    'rimborso vacanza'
);

 





